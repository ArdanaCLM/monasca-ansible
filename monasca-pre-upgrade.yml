#
# (c) Copyright 2016 Hewlett Packard Enterprise Development LP
# (c) Copyright 2017 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---
- hosts: FND-VDB:FND-IDB
  become: yes
  vars_files:
    - roles/monasca-variables/vars/{{ ansible_os_family | lower }}.yml
  tasks:
  - name:  monasca-pre-upgrade | Install aptitude in Debian
    become: yes
    apt:
      name: aptitude
      state: latest
      force: yes
    when: ansible_os_family | lower == 'debian'

  - name: monasca-pre-upgrade | Hold vertica and influxdb package in Debian.
    become: yes
    command: aptitude hold {{ item }} -y
    with_items: monasca_pre_upgrade_pkg_lock
    when: ansible_os_family | lower == 'debian'

  - name: monasca-pre-upgrade | Hold vertica and influxdb package in SLES.
    become: yes
    command: zypper --non-interactive addlock {{ item }}
    with_items: monasca_pre_upgrade_pkg_lock
    when: ansible_os_family | lower == 'suse'

- name: Delete Alarm Definitions from previous Ardana installs
  hosts: MON-API--first-member
  tags: [alarms]
  vars_files:
    - roles/monasca-variables/vars/configuration.yml
    - roles/monasca-variables/defaults/main.yml
    - roles/monasca-default-alarms/defaults/main.yml
  roles:
    - { role: monasca-alarm-definition }
  tasks:
  - name: monasca-pre-upgrade | Remove alarm definitions
    monasca_alarm_definition:
      name: "{{ item.name }}"
      state: "absent"
      keystone_url: "{{ monasca_keystone_url }}"
      keystone_user: "{{ monasca_keystone_user }}"
      keystone_password: "{{ monasca_keystone_password }}"
      keystone_project: "{{ monasca_keystone_project }}"
      monasca_api_url: "{{ monasca_api_url }}"
    with_items:
      - { name: "Kafka Consumer Lag" }
      - { name: "Monasca Agent Emit Time" }
      - { name: "Vertica Status" }

- name: Fix active host checks for all machines on Upgrade
  hosts: MON-LVC
  become: yes
  tags: [active_ping_checks]
  roles:
    - {role: monasca-agent, run_mode: Use}
  tasks:
    - name: Get hostnames and target hostnames for hosts with liveness checks
      set_fact:
         all_checked_hostnames: >
            {{ MON_LVC.consumes_MON_AGN.members.ping |
                 map(attribute='host_dimensions.hostname') | list }}
         all_checked_target_hostnames: >
            {{ MON_LVC.consumes_MON_AGN.members.ping |
                 map(attribute='host') | list }}
      when: (MON_LVC.consumes_MON_AGN.members.ping | length) > 1
    - name: Determine which ones have different names
      set_fact:
        names_to_remove: >
          {{ all_checked_target_hostnames | difference(all_checked_hostnames) }}
      when: (MON_LVC.consumes_MON_AGN.members.ping | length) > 1
    # Dimensions have to match for the entry to be removed. Rather
    # than spending the time to determine if a host is a compute
    # node, these tasks just try to remove the hosts with dimensions and
    # without dimensions and one of them will remove it
    - name: Remove incorrect ping active checks for control hosts
      monasca_agent_plugin:
        name: "HostAlive"
        state: absent
        args:
          type: ping
          hostname: "{{ names_to_remove | join(',') }}"
      when: (MON_LVC.consumes_MON_AGN.members.ping | length) > 1 and
            ((names_to_remove | length) > 1)
    - name: Remove ping incorrect active checks for compute nodes
      monasca_agent_plugin:
        name: "HostAlive"
        state: absent
        args:
          type: ping
          hostname: "{{ names_to_remove | join(',') }}"
          dimensions: "service:compute"
      when: (MON_LVC.consumes_MON_AGN.members.ping | length) > 1 and
            ((names_to_remove | length) > 1)
