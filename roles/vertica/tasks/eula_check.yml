#
# (c) Copyright 2017 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# Vertica admintools CLI is removing EULA file and related commands fails
# as they look for EULA acceptance file at a predefined location.
# The CLI in question is '/opt/vertica/bin/admintools'.
#
# Now we are accepting EULA via expect script when EULA file is missing.
# Currently expect script support is currently available only on SUSE system.
# This play adds EULA acceptance file via admintool CLI and EULA cert is
# accepted silently. Admintool command output is discarded as objective is
# to just add EULA acceptance file at expected location.
#
# This can be included in a task via following step wherever eula file
# presence is needed.
# "- include: ../../vertica/tasks/eula_check.yml"
#    vars:
#       cmd_type: view_cluster  or list_db
#
# cmd_type value is used to map corresponding admintools complete command
---

- name: vertica | main | include OS specific variables
  include_vars: main.yml

- name: vertica | main | include OS specific variables
  include_vars: "{{ ansible_os_family | lower }}.yml"

- name: eula_check | check eula is present or not
  become: yes
  stat: path={{vertica_config_dir}}/d5415f948449e9d4c421b568f2411140.dat
  register: vertica_eula_presence_check

- name: eula_check | set list_db cmd value fact
  set_fact:
    admintool_cmd: /opt/vertica/bin/adminTools -t list_db -d {{ vertica_database_name }}
  when: not vertica_eula_presence_check.stat.exists and cmd_type == 'list_db'

- name: eula_check | set view_cluster cmd value fact
  set_fact:
    admintool_cmd:  /opt/vertica/bin/admintools -t view_cluster -d {{ vertica_database_name }}
  when: not vertica_eula_presence_check.stat.exists and cmd_type == 'view_cluster'

- name: eula_check | copy admintool expect command file if needed
  template:
    src: admintool_execute.j2
    dest: "{{ vertica_dbadmin_home }}/at_{{ cmd_type }}.sh"
    owner: "{{vertica_dbadmin_user}}"
    group: "{{vertica_dbadmin_group}}"
    mode: 0754
  sudo_user: dbadmin
  ignore_errors: yes
  environment: "{{vertica_env}}"
  when: not vertica_eula_presence_check.stat.exists and
        ansible_os_family | lower == 'suse'

- name: eula_check | Run admintool command on SUSE OS only if needed
  sudo_user: dbadmin
  command: "{{ vertica_dbadmin_home }}/at_{{ cmd_type }}.sh"
  register: at_cmd_running_result
  run_once_per: verb_hosts.FND_VDB
  ignore_errors: yes
  when: not vertica_eula_presence_check.stat.exists and
        ansible_os_family | lower == 'suse'

- name: eula_check | Remove admintool expect command file
  become: yes
  file:
    path: "{{ vertica_dbadmin_home }}/at_{{ cmd_type }}.sh"
    state: absent
  when: not vertica_eula_presence_check.stat.exists
